/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    macros {
        ONEPASS: ONEPASS {
            compatible = "zmk,behavior-macro";
            label = "ONEPASS";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(H) &kp LS(E) &kp LS(L) &kp LS(L) &kp LS(O)>;
        };
        SSHOT: SSHOT {
            compatible = "zmk,behavior-macro";
            label = "SSHOT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_release>,
                <&kp LALT>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&gresc         &kp Q        &kp W        &kp E       &kp R       &kp T              &kp Y       &kp U        &kp I         &kp O                   &kp P          &kp BSPC
&mt LCTRL TAB  &bhm LCTRL A  &bhm LSHFT S  &bhm LALT D  &bhm LGUI F  &kp G              &kp H  &bhm RGUI J  &bhm LALT K  &bhm RSHIFT L   &bhm LCTRL SINGLE_QUOTE         &kp ENTER
&mo 2          &kp Z        &kp X        &kp C       &kp V       &kp B              &kp N  &kp M       &kp COMMA   &kp DOT       &kp SINGLE_QUOTE         &kp SINGLE_QUOTE
                                &kp LALT    &kp LGUI    &mt LSHFT SPACE              &lt 1 BSPC    &mo 1    &lt 3 SLASH
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&kp GRAVE    &kp N1    &kp N2    &kp N3    &kp N4       &kp N5                  &kp N6     &kp N7     &kp N8         &kp N9         &kp N0          &kp BSPC
&none        &kp EXCL  &kp AT    &kp HASH  &kp DLLR     &kp PERCENT             &ONEPASS  &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp SEMICOLON        &kp SEMI
&none        &none     &none     &none     &none        &none                   &none     &none      &none      &none          &kp LBRC     &kp LEFT_BRACKET
                                            &trans    &trans    &trans             &trans    &trans    &trans
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                   &kp CARET        &kp AMPS    &kp ASTERISK    &kp LPAR    &kp RPAR         &kp BSPC
&none      &none     &none   &none     &none     &none                       &none            &none       &none           &none       &kp BSLH    &kp BACKSLASH
&none      &bootloader     &none   &none     &none     &none                       &kp UNDER        &kp PLUS    &kp LBRC        &kp RBRC    &kp PIPE        &kp TILDE
                                &trans    &trans    &trans                   &trans    &trans    &trans
            >;
        };

        adjust_layer {
            label = "Adjust";
            bindings = <
&none    &none        &none    &none    &none    &none                  &none          &none            &kp UP_ARROW     &none             &none          &none
&none    &none        &none    &none    &none    &none                  &none          &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW   &none          &none
&none    &none  &none    &none    &none    &none                        &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2      &none          &bootloader
                            &trans    &trans    &trans                  &trans    &trans    &trans
            >;
        };
    };
};
